[{"/home/joao/Documentos/workspace/pokemon/pokemon/src/index.js":"1","/home/joao/Documentos/workspace/pokemon/pokemon/src/App.js":"2","/home/joao/Documentos/workspace/pokemon/pokemon/src/pages/main/index.js":"3","/home/joao/Documentos/workspace/pokemon/pokemon/src/services/api.js":"4","/home/joao/Documentos/workspace/pokemon/pokemon/src/services/apiPokemon.js":"5","/home/joao/Documentos/workspace/pokemon/pokemon/src/services/verification.js":"6","/home/joao/Documentos/workspace/pokemon/pokemon/src/componentes/index.js":"7"},{"size":432,"mtime":1611520951811,"results":"8","hashOfConfig":"9"},{"size":216,"mtime":1611520951811,"results":"10","hashOfConfig":"9"},{"size":4266,"mtime":1611600893706,"results":"11","hashOfConfig":"9"},{"size":222,"mtime":1611599071338,"results":"12","hashOfConfig":"9"},{"size":174,"mtime":1611599750275,"results":"13","hashOfConfig":"9"},{"size":815,"mtime":1611598457576,"results":"14","hashOfConfig":"9"},{"size":325,"mtime":1611757655572,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1191rfs",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/joao/Documentos/workspace/pokemon/pokemon/src/index.js",[],["32","33"],"/home/joao/Documentos/workspace/pokemon/pokemon/src/App.js",[],"/home/joao/Documentos/workspace/pokemon/pokemon/src/pages/main/index.js",["34","35","36","37","38","39","40","41"],"import React, {useState, useEffect} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Api from '../../services/api';\nimport apiPokemon from '../../services/apiPokemon'\nimport {Button, Container, Image} from \"react-bootstrap\";\nimport Alert from '../../componentes/index';\nimport Verification from '../../services/verification';\nimport { useAlert } from 'react-alert';\nimport Pika from '../../imagens/pokemon.jpg';\nimport FigureImage from \"react-bootstrap/FigureImage\";\n\n\n\nfunction Main() {\n    const [cidade, setCidade] = useState('');\n    const [temp, setTemp] = useState('');\n    const [chuva, setChuva] = useState('');\n    const [dados, setDados] = useState('');\n    const [type, setType] = useState('');\n    const [pokemons, setPokemons] = useState([]);\n    const [pokemon, setPokemon] = useState();\n\n    \n    async function pegarTemperatura() {\n        try {\n            let api = new Api(cidade);\n            console.log(api);\n           const response =  await api.get();\n           console.log(response);\n           callPokemon(response.data['weather'][0]['main'], response.data.main.temp);\n                // .then(response => {\n                //     setDados(response.data);\n                //     console.log(dados);\n                //     if (dados['weather'] && dados.main.temp) {\n                //         callPokemon(dados['weather'][0]['main'], dados.main.temp);\n                //     }\n                // });\n        } catch (e) {\n            alert('Cidade Não Encontrada');\n        }\n\n    }\n\n    async function callPokemon(clima, temperatura) {\n        try {\n            console.log(clima, temperatura);\n            if (clima) {\n                if (clima == 'rain') {\n                    setType('electric');\n                    setChuva('Está chovendo!');\n                } else {\n                    if (temperatura) {\n                        setChuva('Não Está chovendo!');\n                        temperatura = Math.trunc(temperatura);\n                        temperatura = temperatura - 273;\n                        setTemp(temperatura);\n                        let tipo = Verification(temperatura);\n                        setType(tipo);\n                    }\n                }\n            }\n\n\n            let api = new apiPokemon(type);\n            const response = await api.get();\n            console.log(response);\n            const {results, pokemon} = response.data;\n            if(results){\n                callPokemonRandom(results, false);\n            }else{\n                callPokemonRandom(pokemon, true);\n            }\n        } catch (e) {\n            <Alert>Houve algum problema na execução</Alert>\n        }\n    }\n\n\n    async function callPokemonRandom(pokemons, isPokemon) {\n        try {\n            console.log(pokemons);\n            let pok = Math.random() * pokemons.length;\n            console.log(pokemons.length);\n            pok = Math.trunc(pok);\n            if (isPokemon){\n                setPokemon(pokemons[pok]['pokemon']['name']);\n            }else{\n                setPokemon(pokemons[pok]['name']);\n            }\n\n        } catch (e) {\n            alert('asdasda');\n            <Alert>Houve algum problema na execução</Alert>\n        }\n    }\n\n\n\n    return (\n        <Container >\n            <Image src={Pika} />\n            <Col xs=\"6\" sm=\"4\">\n                <Form>\n                    <Form.Group controlId=\"formGroupEmail\">\n                        <Col md={12}>\n                            <Form.Label >Cidade</Form.Label>\n                         \n\n                            <Form.Control type=\"text\" placeholder=\"Informe sua cidade corretamente\"\n                                          onChange={event => setCidade(event.target.value)}\n                            />\n                        </Col>\n                    </Form.Group>\n                    <Button onClick={pegarTemperatura}>Buscar</Button>\n                </Form>\n            </Col>\n            <h1>\n                {pokemon}\n            </h1>\n            <h1>\n                {type}\n            </h1>\n            <h1>\n                {chuva}\n            </h1>\n            <h1>\n                {temp}ºC\n            </h1>\n        </Container>\n\n    );\n}\n\n\nexport default Main;","/home/joao/Documentos/workspace/pokemon/pokemon/src/services/api.js",[],"/home/joao/Documentos/workspace/pokemon/pokemon/src/services/apiPokemon.js",[],"/home/joao/Documentos/workspace/pokemon/pokemon/src/services/verification.js",[],"/home/joao/Documentos/workspace/pokemon/pokemon/src/componentes/index.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":26,"nodeType":"48","messageId":"49","endLine":1,"endColumn":35},{"ruleId":"46","severity":1,"message":"50","line":9,"column":10,"nodeType":"48","messageId":"49","endLine":9,"endColumn":18},{"ruleId":"46","severity":1,"message":"51","line":11,"column":8,"nodeType":"48","messageId":"49","endLine":11,"endColumn":19},{"ruleId":"46","severity":1,"message":"52","line":19,"column":12,"nodeType":"48","messageId":"49","endLine":19,"endColumn":17},{"ruleId":"46","severity":1,"message":"53","line":19,"column":19,"nodeType":"48","messageId":"49","endLine":19,"endColumn":27},{"ruleId":"46","severity":1,"message":"54","line":21,"column":12,"nodeType":"48","messageId":"49","endLine":21,"endColumn":20},{"ruleId":"46","severity":1,"message":"55","line":21,"column":22,"nodeType":"48","messageId":"49","endLine":21,"endColumn":33},{"ruleId":"56","severity":1,"message":"57","line":49,"column":27,"nodeType":"58","messageId":"59","endLine":49,"endColumn":29},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useAlert' is defined but never used.","'FigureImage' is defined but never used.","'dados' is assigned a value but never used.","'setDados' is assigned a value but never used.","'pokemons' is assigned a value but never used.","'setPokemons' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]